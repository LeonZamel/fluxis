# Generated by Django 3.2.7 on 2022-01-04 15:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('django_celery_beat', '0015_edit_solarschedule_events_choices'),
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('deployed', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flows', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FlowRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('successful', models.BooleanField(blank=True, default=True)),
                ('message', models.TextField(blank=True, null=True)),
                ('node_run_count', models.IntegerField(blank=True, null=True)),
                ('datetime_created', models.DateTimeField(auto_now_add=True)),
                ('datetime_start', models.DateTimeField(blank=True, null=True)),
                ('datetime_end', models.DateTimeField(blank=True, null=True)),
                ('flow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='runs', to='core.flow')),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('function', models.CharField(choices=[('join_tables', 'Join tables'), ('filter', 'Filter'), ('math_expression', 'Math expression'), ('summarize', 'Summarize'), ('http_get_request', 'Http Request'), ('parse_csv', 'Parse CSV'), ('read_google_sheet', 'Read Google sheet'), ('write_google_sheet', 'Write Google sheet')], max_length=40)),
                ('credentials', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='node_credentials', to='authentication.credentials')),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='core.flow')),
            ],
        ),
        migrations.CreateModel(
            name='NodeRun',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_start', models.DateTimeField(auto_now_add=True)),
                ('datetime_end', models.DateTimeField(blank=True, null=True)),
                ('output', models.FileField(upload_to='')),
                ('name', models.CharField(max_length=100)),
                ('function', models.CharField(choices=[('join_tables', 'Join tables'), ('filter', 'Filter'), ('math_expression', 'Math expression'), ('summarize', 'Summarize'), ('http_get_request', 'Http Request'), ('parse_csv', 'Parse CSV'), ('read_google_sheet', 'Read Google sheet'), ('write_google_sheet', 'Write Google sheet')], max_length=40)),
                ('flowrun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='node_runs', to='core.flowrun')),
                ('node', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.node')),
            ],
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Trigger',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='triggers', to=settings.AUTH_USER_MODEL)),
                ('subscribed_nodes', models.ManyToManyField(blank=True, to='core.Node')),
            ],
        ),
        migrations.CreateModel(
            name='BaseInPort',
            fields=[
                ('port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.port')),
            ],
            bases=('core.port',),
        ),
        migrations.CreateModel(
            name='FlowConfig',
            fields=[
                ('flow', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='config', serialize=False, to='core.flow')),
                ('log_node_run', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='HttpEndpointTrigger',
            fields=[
                ('trigger_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.trigger')),
                ('path', models.CharField(max_length=200)),
            ],
            bases=('core.trigger',),
        ),
        migrations.CreateModel(
            name='TimerTrigger',
            fields=[
                ('trigger_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.trigger')),
                ('interval', models.IntegerField()),
                ('repetitions', models.IntegerField()),
            ],
            bases=('core.trigger',),
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('data_type', models.CharField(choices=[('boolean', 'boolean'), ('int', 'int'), ('string', 'string')], max_length=20)),
                ('value', models.JSONField()),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='core.node')),
            ],
        ),
        migrations.CreateModel(
            name='NodeRunExtraOutput',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port_key', models.CharField(max_length=20)),
                ('output', models.FileField(upload_to='')),
                ('noderun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_output', to='core.noderun')),
            ],
        ),
        migrations.CreateModel(
            name='FlowRunSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_tz', models.CharField(max_length=50)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='core.flow')),
                ('periodic_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.periodictask')),
            ],
        ),
        migrations.CreateModel(
            name='File',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200)),
                ('file', models.FileField(upload_to='')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='files', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='InPort',
            fields=[
                ('base_in_port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.baseinport')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_ports', to='core.node')),
            ],
            bases=('core.baseinport',),
        ),
        migrations.CreateModel(
            name='OutPort',
            fields=[
                ('port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.port')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='out_ports', to='core.node')),
            ],
            bases=('core.port',),
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edges', to='core.flow')),
                ('from_port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.outport')),
                ('to_port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.baseinport')),
            ],
        ),
        migrations.CreateModel(
            name='ConstantValue',
            fields=[
                ('port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='constant_value', serialize=False, to='core.inport')),
                ('data_type', models.CharField(choices=[('other', 'other'), ('table', 'table'), ('json', 'json'), ('boolean', 'boolean'), ('int', 'int'), ('string', 'string'), ('string_array', 'string_array'), ('ml_model', 'ml_model')], default='string', max_length=20)),
                ('value', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='TriggerInPort',
            fields=[
                ('base_in_port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.baseinport')),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trigger_port', to='core.node')),
            ],
            bases=('core.baseinport',),
        ),
    ]
