# Generated by Django 2.2 on 2020-09-13 12:13

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('django_celery_beat', '0012_periodictask_expire_seconds'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('authentication', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Flow',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('deployed', models.BooleanField(default=False)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flows', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FlowRun',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('successful', models.BooleanField(blank=True, default=True)),
                ('message', models.CharField(blank=True, max_length=100, null=True)),
                ('node_run_count', models.IntegerField(blank=True, null=True)),
                ('datetime_start', models.DateTimeField(blank=True, null=True)),
                ('datetime_end', models.DateTimeField(blank=True, null=True)),
                ('flow', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='runs', to='core.Flow')),
            ],
        ),
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.UUIDField(blank=True, default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('x', models.IntegerField()),
                ('y', models.IntegerField()),
                ('function', models.CharField(choices=[('manual_trigger', 'Manual Trigger'), ('if_else', 'If Else condition'), ('select_columns', 'Select columns'), ('add_column', 'Add column'), ('merge_tables', 'Merge tables'), ('join_tables', 'Join tables'), ('create_object', 'Create object'), ('object_set_by_key', 'Set object value by key'), ('object_get_by_key', 'Get object value by key'), ('object_get_keys', 'Get object keys'), ('parse_json', 'Parse JSON'), ('length', 'Length of iterable'), ('math_expression', 'Mathematical expression'), ('average', 'Average'), ('sum', 'Sum'), ('is_nan', 'Is NaN'), ('filter', 'Filter'), ('logical_not', 'Logical not'), ('text_template', 'Text template'), ('support_vector_machine', 'Support Vector Machine'), ('decision_tree_regressor', 'Decision Tree Regressor'), ('predict', 'Predict'), ('http_request', 'HTTP Request'), ('read_csv_from_url', 'Read CSV from URL'), ('read_google_sheet', 'Read Google Sheet'), ('query_postgresql', 'Query Postrgresql Database'), ('import_google_analytics', 'Import Google Analytics data'), ('send_pushbullet_notification', 'Send Pushbullet notification'), ('send_slack_message', 'Send message to slack'), ('write_google_sheet', 'Write to Google Sheet')], max_length=40)),
                ('credentials', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='node_credentials', to='authentication.Credentials')),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='nodes', to='core.Flow')),
            ],
        ),
        migrations.CreateModel(
            name='NodeRun',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_start', models.DateTimeField(auto_now_add=True)),
                ('datetime_end', models.DateTimeField(blank=True, null=True)),
                ('output', models.FileField(upload_to='')),
                ('flowrun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='node_runs', to='core.FlowRun')),
                ('node', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.Node')),
            ],
        ),
        migrations.CreateModel(
            name='Port',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Trigger',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=100)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='triggers', to=settings.AUTH_USER_MODEL)),
                ('subscribed_nodes', models.ManyToManyField(blank=True, to='core.Node')),
            ],
        ),
        migrations.CreateModel(
            name='BaseInPort',
            fields=[
                ('port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Port')),
            ],
            bases=('core.port',),
        ),
        migrations.CreateModel(
            name='FlowConfig',
            fields=[
                ('flow', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='config', serialize=False, to='core.Flow')),
                ('log_node_run', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='HttpEndpointTrigger',
            fields=[
                ('trigger_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Trigger')),
                ('path', models.CharField(max_length=200)),
            ],
            bases=('core.trigger',),
        ),
        migrations.CreateModel(
            name='TimerTrigger',
            fields=[
                ('trigger_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Trigger')),
                ('interval', models.IntegerField()),
                ('repetitions', models.IntegerField()),
            ],
            bases=('core.trigger',),
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.CharField(max_length=100)),
                ('data_type', models.CharField(choices=[('boolean', 'boolean'), ('int', 'int'), ('string', 'string')], max_length=20)),
                ('value', django.contrib.postgres.fields.jsonb.JSONField()),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parameters', to='core.Node')),
            ],
        ),
        migrations.CreateModel(
            name='NodeRunExtraOutput',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('port_key', models.CharField(max_length=20)),
                ('output', models.FileField(upload_to='')),
                ('noderun', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_output', to='core.NodeRun')),
            ],
        ),
        migrations.CreateModel(
            name='FlowRunSchedule',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('show_tz', models.CharField(max_length=50)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='schedule', to='core.Flow')),
                ('periodic_task', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='django_celery_beat.PeriodicTask')),
            ],
        ),
        migrations.CreateModel(
            name='InPort',
            fields=[
                ('base_in_port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.BaseInPort')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_ports', to='core.Node')),
            ],
            bases=('core.baseinport',),
        ),
        migrations.CreateModel(
            name='OutPort',
            fields=[
                ('port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.Port')),
                ('node', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='out_ports', to='core.Node')),
            ],
            bases=('core.port',),
        ),
        migrations.CreateModel(
            name='Edge',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('flow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='edges', to='core.Flow')),
                ('from_port', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.OutPort')),
                ('to_port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.BaseInPort')),
            ],
        ),
        migrations.CreateModel(
            name='ConstantValue',
            fields=[
                ('port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='constant_value', serialize=False, to='core.InPort')),
                ('data_type', models.CharField(choices=[('other', 'other'), ('table', 'table'), ('json', 'json'), ('boolean', 'boolean'), ('int', 'int'), ('string', 'string'), ('string_array', 'string_array'), ('ml_model', 'ml_model')], default='string', max_length=20)),
                ('value', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='TriggerInPort',
            fields=[
                ('base_in_port', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='core.BaseInPort')),
                ('node', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='trigger_port', to='core.Node')),
            ],
            bases=('core.baseinport',),
        ),
    ]
